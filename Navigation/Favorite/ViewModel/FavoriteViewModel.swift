//
//  FavoriteViewModel.swift
//  Navigation
//
//  Created by –ê–Ω–¥—Ä–µ–π –†—ã–±–∞–ª–∫–∏–Ω on 13.07.2022.
//

import UIKit
import CoreData

final class FavoriteViewModel {
    
    static let shared = FavoriteViewModel()
    
    public var favoritePosts = [FavoritePostEntity]()
    
    
    //    public var favoritePosts = [
    //
    //    Post(
    //                      title: "¬´–Æ—Ä–µ–Ω—Ç¬ª –≤–æ—à–µ–ª –≤ —ç–∫–æ—Å–∏—Å—Ç–µ–º—É –ú–¢–°",
    //                      description: "–°–µ—Ä–≤–∏—Å –ø—Ä–æ–∫–∞—Ç–∞ —Å–∞–º–æ–∫–∞—Ç–æ–≤ ¬´–Æ—Ä–µ–Ω—Ç¬ª –ø—Ä–∏–≤–ª–µ–∫ –±–æ–ª–µ–µ 2 –º–ª—Ä–¥ —Ä—É–±–ª–µ–π –æ—Ç –ú–¢–° –∏ —Ñ–æ–Ω–¥–æ–≤ VPE Capital –∏ VEB –≤ —Ö–æ–¥–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Ä–∞—É–Ω–¥–∞ —Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏—è. –ú–¢–° –≤–ª–æ–∂–∏–ª–∞ –≤ —Å–µ—Ä–≤–∏—Å 740 –º–ª–Ω —Ä—É–±–ª–µ–π —Å—Ç–∞–≤ –ª–∏–¥-–∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–º, —Ñ–æ–Ω–¥ –ø—Ä—è–º—ã—Ö –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π VPE Capital ‚Äî 700 –º–ª–Ω —Ä—É–±., –≤–µ–Ω—á—É—Ä–Ω—ã–π —Ñ–æ–Ω–¥ VEB Ventures ‚Äî 650 –º–ª–Ω —Ä—É–±. –û–± —ç—Ç–æ–º —Å–æ–æ–±—â–∞–µ—Ç –∏–∑–¥–∞–Ω–∏–µ Inc.",
    //                      image: "post_3",
    //                      likes: 241,
    //                      views: 54430),
    //    Post(
    //                      title: "–ö–µ–º –ø–æ–æ–±–µ–¥–∞–ª –¥—Ä–µ–≤–Ω–∏–π –∫—Ä–æ–∫–æ–¥–∏–ª?",
    //                      description: "–ê–≤—Å—Ç—Ä–∞–ª–∏–π—Å–∫–∏–µ –∏ –∞–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∏–µ –ø–∞–ª–µ–æ–Ω—Ç–æ–ª–æ–≥–∏ –≤–ø–µ—Ä–≤—ã–µ –æ–ø–∏—Å–∞–ª–∏ –æ–∫–∞–º–µ–Ω–µ–ª–æ—Å—Ç—å –∫—Ä–æ–∫–æ–¥–∏–ª–∞, –≤ –±—Ä—é—à–Ω–æ–π –ø–æ–ª–æ—Å—Ç–∏ –∫–æ—Ç–æ—Ä–æ–≥–æ, –≤–æ—Ç —Å—é—Ä–ø—Ä–∏–∑, –Ω–∞—à–ª–∏—Å—å –æ—Å—Ç–∞–Ω–∫–∏ –µ–¥—ã, —Ç–æ –±–∏—à—å –¥–∏–Ω–æ–∑–∞–≤—Ä–∞. –ö–∞–∫ –ø–æ–∫–∞–∑–∞–ª–æ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –∏–∑—É—á–µ–Ω–∏–µ, —É—á–µ–Ω—ã–µ –∏–º–µ—é—Ç –¥–µ–ª–æ —Å —Ä–∞–Ω–µ–µ –Ω–µ–æ–ø–∏—Å–∞–Ω–Ω—ã–º –≤–∏–¥–æ–º –∫—Ä–æ–∫–æ–¥–∏–ª–æ–≤–∏–¥–Ω–æ–≥–æ –º–µ–ª–æ–≤–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ –æ–Ω–∏ –Ω–∞–∑–≤–∞–ª–∏ —É–±–∏–π—Ü–µ–π –¥–∏–Ω–æ–∑–∞–≤—Ä–æ–≤ ‚Äî Confractosuchus sauroktonos.",
    //                      image: "post_4",
    //                      likes: 76,
    //                      views: 8965),
    //    Post(
    //                      title: "27 —Ñ–µ–≤—Ä–∞–ª—è Samsung –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç Galaxy Book",
    //                      description: "–ò–∑–¥–∞–Ω–∏–µ Verge —Å–æ–æ–±—â–∞–µ—Ç, —á—Ç–æ —é–∂–Ω–æ–∫–æ—Ä–µ–π—Å–∫–∞—è –∫–æ–º–ø–∞–Ω–∏—è Samsung –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç –Ω–æ—É—Ç–±—É–∫ Galaxy Book 27 —Ñ–µ–≤—Ä–∞–ª—è –≤ —Ä–∞–º–∫–∞—Ö –≤—ã—Å—Ç–∞–≤–∫–∏ –º–æ–±–∏–ª—å–Ω–æ–π –∏–Ω–¥—É—Å—Ç—Ä–∏–∏ Mobile World Congress. –¢—Ä–∞–Ω—Å–ª—è—Ü–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –ø—Ä–æ–π–¥–µ—Ç Samsung Newsroom –∏ –Ω–∞ –∫–∞–Ω–∞–ª–µ –∫–æ–º–ø–∞–Ω–∏–∏ –≤ Youtube.",
    //                      image: "post_5",
    //                      likes: 20,
    //                      views: 2420)
    //]
    
    func numberOfRows() -> Int {
        return favoritePosts.count
    }
    
//    func cellViewModel(forIndexPath indexPath: IndexPath) -> FavoritePostTableViewCellViewModel? {
//        let post = favoritePosts[indexPath.row]
//        return FavoritePostTableViewCellViewModel(post: post)
//    }
    
    func save(post: Post) {
        
        if let appDelegate = UIApplication.shared.delegate as? AppDelegate {
            let context = appDelegate.persistentContainer.viewContext
            
            guard let entityDescription = NSEntityDescription.entity(forEntityName: "FavoritePostEntity", in: context) else { return }
            
            let newValue = NSManagedObject(entity: entityDescription, insertInto: context)
            
            let image = UIImage(named: post.image)
            let imageData = image!.pngData()
            
            newValue.setValue(imageData, forKey: "image")
            newValue.setValue(post.title, forKey: "title")
            newValue.setValue(post.description, forKey: "text")
            newValue.setValue(post.likes, forKey: "likes")
            newValue.setValue(post.views, forKey: "views")
            newValue.setValue(post.personalID, forKey: "id")

            
            do {
                try context.save()
                print("Saved: \(post.title)")
            } catch {
                print("Saving Error")
            }
        }
    }
    
    func removeCoreData() {
        if let appDelegate = UIApplication.shared.delegate as? AppDelegate {
            
            let context = appDelegate.persistentContainer.viewContext
            let fetchRequest: NSFetchRequest<NSFetchRequestResult> = NSFetchRequest(entityName: "FavoritePostEntity")
            let deleteRequest = NSBatchDeleteRequest(fetchRequest: fetchRequest)
            
            do {
                try context.execute(deleteRequest)
            } catch let error as NSError {
                print(error.localizedDescription)
            }
            
        }
    }
    
    func retrieveValues() {
        favoritePosts.removeAll()
        
        if let appDelegate = UIApplication.shared.delegate as? AppDelegate {
            let context = appDelegate.persistentContainer.viewContext
            
            let fetchRequest = NSFetchRequest<FavoritePostEntity>(entityName: "FavoritePostEntity")
            
            
            do {
                let results = try context.fetch(fetchRequest)
                
                for result in results {
                    print (result.title ?? "???")
                    
                    favoritePosts.append(result)
                    
                }
            } catch {
                print ("Could not retrive")
            }
        }
        
        print ("üê∏\(favoritePosts.count)") 
    }
    
    
    
    
}
